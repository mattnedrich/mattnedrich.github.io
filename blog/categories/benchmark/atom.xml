<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Benchmark | Matt Nedrich]]></title>
  <link href="http://www.mattnedrich.com/blog/categories/benchmark/atom.xml" rel="self"/>
  <link href="http://www.mattnedrich.com/"/>
  <updated>2015-05-17T14:32:56-04:00</updated>
  <id>http://www.mattnedrich.com/</id>
  <author>
    <name><![CDATA[Matt Nedrich]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Benchmarking C# Code]]></title>
    <link href="http://www.mattnedrich.com/blog/2014/02/07/benchmarking-c-number/"/>
    <updated>2014-02-07T00:01:49-05:00</updated>
    <id>http://www.mattnedrich.com/blog/2014/02/07/benchmarking-c-number</id>
    <content type="html"><![CDATA[<p>I occasionally need to benchmark some code. In C#, this can easily be done using the Stopwatch class. After writing the same boilerplate Stopwatch wrapper enough times I decided to throw together a simple Benchmarker class.</p>

<p>{% coderay lang:java %}
public static class Benchmarker
{
    public static TimeSpan RunOnce(Action action)
    {
        Stopwatch stopwatch = Stopwatch.StartNew();
        action();
        stopwatch.Stop();
        return stopwatch.Elapsed;
    }</p>

<pre><code>public static IEnumerable&lt;TimeSpan&gt; RunMany(Action action, int runCount)
{
    List&lt;TimeSpan&gt; results = new List&lt;TimeSpan&gt;();
    for (int i = 0; i &lt; runCount; i++)
        results.Add(RunOnce(action));
    return results;
} } {% endcoderay %}
</code></pre>

<p>This allows any code to be easily called and timed. For example, suppose you have a void Method called <code>Foo</code>. This can be timed via:</p>

<p>{% coderay lang:java%}
TimeSpan timespan = Benchmarker.RunOnce(() =&gt; Foo());
{% endcoderay %}</p>

<p>Similarly, if you want to benchmark a method that happens to return something like this</p>

<p>{% coderay lang:java%}
int bar = FooWithReturnValue();
{% endcoderay %}</p>

<p>you can use the above Benchmarker class via</p>

<p>{% coderay lang:java%}
int bar;
TimeSpan timespan = Benchmarker.RunOnce(() =&gt; bar = FooWithReturnValue());
{% endcoderay %}</p>

<p>Iâ€™ve put this on github:
<a href="https://github.com/mattnedrich/tools/tree/master/csharp/Benchmarker.cs">https://github.com/mattnedrich/tools/tree/master/csharp/Benchmarker.cs</a></p>
]]></content>
  </entry>
  
</feed>
